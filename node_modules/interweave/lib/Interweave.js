'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Element = require('./Element');

var _Element2 = _interopRequireDefault(_Element);

var _Parser = require('./Parser');

var _Parser2 = _interopRequireDefault(_Parser);

var _shapes = require('./shapes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Interweave = function (_React$Component) {
  (0, _inherits3.default)(Interweave, _React$Component);

  function Interweave() {
    (0, _classCallCheck3.default)(this, Interweave);
    return (0, _possibleConstructorReturn3.default)(this, (Interweave.__proto__ || (0, _getPrototypeOf2.default)(Interweave)).apply(this, arguments));
  }

  (0, _createClass3.default)(Interweave, [{
    key: 'parseMarkup',
    value: function parseMarkup() {
      var _this2 = this;

      var _props = this.props,
          tagName = _props.tagName,
          content = _props.content,
          emptyContent = _props.emptyContent,
          onBeforeParse = _props.onBeforeParse,
          onAfterParse = _props.onAfterParse,
          matchers = _props.matchers,
          disableMatchers = _props.disableMatchers,
          filters = _props.filters,
          disableFilters = _props.disableFilters,
          props = (0, _objectWithoutProperties3.default)(_props, ['tagName', 'content', 'emptyContent', 'onBeforeParse', 'onAfterParse', 'matchers', 'disableMatchers', 'filters', 'disableFilters']);


      var allMatchers = disableMatchers ? [] : matchers;
      var allFilters = disableFilters ? [] : filters;
      var beforeCallbacks = onBeforeParse ? [onBeforeParse] : [];
      var afterCallbacks = onAfterParse ? [onAfterParse] : [];

      allMatchers.forEach(function (matcher) {
        if (matcher.onBeforeParse) {
          beforeCallbacks.push(matcher.onBeforeParse.bind(matcher));
        }

        if (matcher.onAfterParse) {
          afterCallbacks.push(matcher.onAfterParse.bind(matcher));
        }
      });

      var markup = beforeCallbacks.reduce(function (string, callback) {
        var nextString = callback(string, _this2.props);

        if ("production" !== process.env.NODE_ENV) {
          if (typeof nextString !== 'string') {
            throw new TypeError('Interweave `onBeforeParse` must return a valid HTML string.');
          }
        }

        return nextString;
      }, content);

      var parser = new _Parser2.default(markup, props, allMatchers, allFilters);

      var nodes = afterCallbacks.reduce(function (parserNodes, callback) {
        var nextNodes = callback(parserNodes, _this2.props);

        if ("production" !== process.env.NODE_ENV) {
          if (!Array.isArray(nextNodes)) {
            throw new TypeError('Interweave `onAfterParse` must return an array of strings and React elements.');
          }
        }

        return nextNodes;
      }, parser.parse());

      if (nodes.length === 0) {
        return emptyContent;
      }

      return nodes;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          tagName = _props2.tagName,
          noHtml = _props2.noHtml,
          noHtmlExceptMatchers = _props2.noHtmlExceptMatchers;

      var className = noHtml || noHtmlExceptMatchers ? 'interweave--no-html' : '';

      return _react2.default.createElement(
        _Element2.default,
        { tagName: tagName, className: className },
        this.parseMarkup()
      );
    }
  }]);
  return Interweave;
}(_react2.default.Component); /**
                               * @copyright   2016, Miles Johnson
                               * @license     https://opensource.org/licenses/MIT
                               * 
                               */

Interweave.propTypes = {
  content: _propTypes2.default.string,
  disableFilters: _propTypes2.default.bool,
  disableLineBreaks: _propTypes2.default.bool,
  disableMatchers: _propTypes2.default.bool,
  disableWhitelist: _propTypes2.default.bool,
  emptyContent: _propTypes2.default.node,
  filters: _propTypes2.default.arrayOf(_shapes.FilterShape),
  matchers: _propTypes2.default.arrayOf(_shapes.MatcherShape),
  noHtml: _propTypes2.default.bool,
  noHtmlExceptMatchers: _propTypes2.default.bool,
  tagName: _propTypes2.default.oneOf(['span', 'div', 'p']),
  onAfterParse: _propTypes2.default.func,
  onBeforeParse: _propTypes2.default.func
};
Interweave.defaultProps = {
  content: '',
  disableFilters: false,
  disableLineBreaks: false,
  disableMatchers: false,
  disableWhitelist: false,
  emptyContent: null,
  filters: [],
  matchers: [],
  noHtml: false,
  noHtmlExceptMatchers: false,
  tagName: 'span',
  onAfterParse: null,
  onBeforeParse: null
};
exports.default = Interweave;