import _extends from 'babel-runtime/helpers/extends';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
/**
 * @copyright   2016, Miles Johnson
 * @license     https://opensource.org/licenses/MIT
 * 
 */

import React from 'react';
import PropTypes from 'prop-types';

var Element = function (_React$PureComponent) {
  _inherits(Element, _React$PureComponent);

  function Element() {
    _classCallCheck(this, Element);

    return _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).apply(this, arguments));
  }

  _createClass(Element, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          attributes = _props.attributes,
          children = _props.children,
          className = _props.className,
          commonClass = _props.commonClass,
          selfClose = _props.selfClose,
          Tag = _props.tagName;

      var props = _extends({}, attributes);

      if (!selfClose || selfClose && Tag === 'img') {
        props.className = [commonClass, className || '', attributes.className || ''].filter(Boolean).join(' ') || null;
      }

      if (selfClose) {
        return React.createElement(Tag, props);
      }

      return React.createElement(
        Tag,
        props,
        children
      );
    }
  }]);

  return Element;
}(React.PureComponent);

Element.propTypes = {
  attributes: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])),
  children: PropTypes.node,
  className: PropTypes.string,
  commonClass: PropTypes.string,
  selfClose: PropTypes.bool,
  tagName: PropTypes.string.isRequired
};
Element.defaultProps = {
  attributes: {},
  children: null,
  className: '',
  commonClass: 'interweave',
  selfClose: false
};
export default Element;